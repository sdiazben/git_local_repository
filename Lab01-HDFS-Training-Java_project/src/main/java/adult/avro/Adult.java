/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package adult.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Adult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5996056658831392419L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Adult\",\"namespace\":\"adult.avro\",\"fields\":[{\"name\":\"age\",\"type\":[\"int\",\"null\"]},{\"name\":\"workclass\",\"type\":[\"string\",\"null\"]},{\"name\":\"fnlwgt\",\"type\":[\"int\",\"null\"]},{\"name\":\"education\",\"type\":[\"string\",\"null\"]},{\"name\":\"education_num\",\"type\":[\"int\",\"null\"]},{\"name\":\"marital_status\",\"type\":[\"string\",\"null\"]},{\"name\":\"occupation\",\"type\":[\"string\",\"null\"]},{\"name\":\"relationship\",\"type\":[\"string\",\"null\"]},{\"name\":\"race\",\"type\":[\"string\",\"null\"]},{\"name\":\"sex\",\"type\":[\"string\",\"null\"]},{\"name\":\"capital_gain\",\"type\":[\"int\",\"null\"]},{\"name\":\"capital_loss\",\"type\":[\"int\",\"null\"]},{\"name\":\"hours_per_week\",\"type\":[\"int\",\"null\"]},{\"name\":\"native_country\",\"type\":[\"string\",\"null\"]},{\"name\":\"salary_range\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Adult> ENCODER =
      new BinaryMessageEncoder<Adult>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Adult> DECODER =
      new BinaryMessageDecoder<Adult>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Adult> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Adult> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Adult>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Adult to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Adult from a ByteBuffer. */
  public static Adult fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.Integer age;
  @Deprecated public java.lang.CharSequence workclass;
  @Deprecated public java.lang.Integer fnlwgt;
  @Deprecated public java.lang.CharSequence education;
  @Deprecated public java.lang.Integer education_num;
  @Deprecated public java.lang.CharSequence marital_status;
  @Deprecated public java.lang.CharSequence occupation;
  @Deprecated public java.lang.CharSequence relationship;
  @Deprecated public java.lang.CharSequence race;
  @Deprecated public java.lang.CharSequence sex;
  @Deprecated public java.lang.Integer capital_gain;
  @Deprecated public java.lang.Integer capital_loss;
  @Deprecated public java.lang.Integer hours_per_week;
  @Deprecated public java.lang.CharSequence native_country;
  @Deprecated public java.lang.CharSequence salary_range;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Adult() {}

  /**
   * All-args constructor.
   * @param age The new value for age
   * @param workclass The new value for workclass
   * @param fnlwgt The new value for fnlwgt
   * @param education The new value for education
   * @param education_num The new value for education_num
   * @param marital_status The new value for marital_status
   * @param occupation The new value for occupation
   * @param relationship The new value for relationship
   * @param race The new value for race
   * @param sex The new value for sex
   * @param capital_gain The new value for capital_gain
   * @param capital_loss The new value for capital_loss
   * @param hours_per_week The new value for hours_per_week
   * @param native_country The new value for native_country
   * @param salary_range The new value for salary_range
   */
  public Adult(java.lang.Integer age, java.lang.CharSequence workclass, java.lang.Integer fnlwgt, java.lang.CharSequence education, java.lang.Integer education_num, java.lang.CharSequence marital_status, java.lang.CharSequence occupation, java.lang.CharSequence relationship, java.lang.CharSequence race, java.lang.CharSequence sex, java.lang.Integer capital_gain, java.lang.Integer capital_loss, java.lang.Integer hours_per_week, java.lang.CharSequence native_country, java.lang.CharSequence salary_range) {
    this.age = age;
    this.workclass = workclass;
    this.fnlwgt = fnlwgt;
    this.education = education;
    this.education_num = education_num;
    this.marital_status = marital_status;
    this.occupation = occupation;
    this.relationship = relationship;
    this.race = race;
    this.sex = sex;
    this.capital_gain = capital_gain;
    this.capital_loss = capital_loss;
    this.hours_per_week = hours_per_week;
    this.native_country = native_country;
    this.salary_range = salary_range;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return age;
    case 1: return workclass;
    case 2: return fnlwgt;
    case 3: return education;
    case 4: return education_num;
    case 5: return marital_status;
    case 6: return occupation;
    case 7: return relationship;
    case 8: return race;
    case 9: return sex;
    case 10: return capital_gain;
    case 11: return capital_loss;
    case 12: return hours_per_week;
    case 13: return native_country;
    case 14: return salary_range;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: age = (java.lang.Integer)value$; break;
    case 1: workclass = (java.lang.CharSequence)value$; break;
    case 2: fnlwgt = (java.lang.Integer)value$; break;
    case 3: education = (java.lang.CharSequence)value$; break;
    case 4: education_num = (java.lang.Integer)value$; break;
    case 5: marital_status = (java.lang.CharSequence)value$; break;
    case 6: occupation = (java.lang.CharSequence)value$; break;
    case 7: relationship = (java.lang.CharSequence)value$; break;
    case 8: race = (java.lang.CharSequence)value$; break;
    case 9: sex = (java.lang.CharSequence)value$; break;
    case 10: capital_gain = (java.lang.Integer)value$; break;
    case 11: capital_loss = (java.lang.Integer)value$; break;
    case 12: hours_per_week = (java.lang.Integer)value$; break;
    case 13: native_country = (java.lang.CharSequence)value$; break;
    case 14: salary_range = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'age' field.
   * @return The value of the 'age' field.
   */
  public java.lang.Integer getAge() {
    return age;
  }

  /**
   * Sets the value of the 'age' field.
   * @param value the value to set.
   */
  public void setAge(java.lang.Integer value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'workclass' field.
   * @return The value of the 'workclass' field.
   */
  public java.lang.CharSequence getWorkclass() {
    return workclass;
  }

  /**
   * Sets the value of the 'workclass' field.
   * @param value the value to set.
   */
  public void setWorkclass(java.lang.CharSequence value) {
    this.workclass = value;
  }

  /**
   * Gets the value of the 'fnlwgt' field.
   * @return The value of the 'fnlwgt' field.
   */
  public java.lang.Integer getFnlwgt() {
    return fnlwgt;
  }

  /**
   * Sets the value of the 'fnlwgt' field.
   * @param value the value to set.
   */
  public void setFnlwgt(java.lang.Integer value) {
    this.fnlwgt = value;
  }

  /**
   * Gets the value of the 'education' field.
   * @return The value of the 'education' field.
   */
  public java.lang.CharSequence getEducation() {
    return education;
  }

  /**
   * Sets the value of the 'education' field.
   * @param value the value to set.
   */
  public void setEducation(java.lang.CharSequence value) {
    this.education = value;
  }

  /**
   * Gets the value of the 'education_num' field.
   * @return The value of the 'education_num' field.
   */
  public java.lang.Integer getEducationNum() {
    return education_num;
  }

  /**
   * Sets the value of the 'education_num' field.
   * @param value the value to set.
   */
  public void setEducationNum(java.lang.Integer value) {
    this.education_num = value;
  }

  /**
   * Gets the value of the 'marital_status' field.
   * @return The value of the 'marital_status' field.
   */
  public java.lang.CharSequence getMaritalStatus() {
    return marital_status;
  }

  /**
   * Sets the value of the 'marital_status' field.
   * @param value the value to set.
   */
  public void setMaritalStatus(java.lang.CharSequence value) {
    this.marital_status = value;
  }

  /**
   * Gets the value of the 'occupation' field.
   * @return The value of the 'occupation' field.
   */
  public java.lang.CharSequence getOccupation() {
    return occupation;
  }

  /**
   * Sets the value of the 'occupation' field.
   * @param value the value to set.
   */
  public void setOccupation(java.lang.CharSequence value) {
    this.occupation = value;
  }

  /**
   * Gets the value of the 'relationship' field.
   * @return The value of the 'relationship' field.
   */
  public java.lang.CharSequence getRelationship() {
    return relationship;
  }

  /**
   * Sets the value of the 'relationship' field.
   * @param value the value to set.
   */
  public void setRelationship(java.lang.CharSequence value) {
    this.relationship = value;
  }

  /**
   * Gets the value of the 'race' field.
   * @return The value of the 'race' field.
   */
  public java.lang.CharSequence getRace() {
    return race;
  }

  /**
   * Sets the value of the 'race' field.
   * @param value the value to set.
   */
  public void setRace(java.lang.CharSequence value) {
    this.race = value;
  }

  /**
   * Gets the value of the 'sex' field.
   * @return The value of the 'sex' field.
   */
  public java.lang.CharSequence getSex() {
    return sex;
  }

  /**
   * Sets the value of the 'sex' field.
   * @param value the value to set.
   */
  public void setSex(java.lang.CharSequence value) {
    this.sex = value;
  }

  /**
   * Gets the value of the 'capital_gain' field.
   * @return The value of the 'capital_gain' field.
   */
  public java.lang.Integer getCapitalGain() {
    return capital_gain;
  }

  /**
   * Sets the value of the 'capital_gain' field.
   * @param value the value to set.
   */
  public void setCapitalGain(java.lang.Integer value) {
    this.capital_gain = value;
  }

  /**
   * Gets the value of the 'capital_loss' field.
   * @return The value of the 'capital_loss' field.
   */
  public java.lang.Integer getCapitalLoss() {
    return capital_loss;
  }

  /**
   * Sets the value of the 'capital_loss' field.
   * @param value the value to set.
   */
  public void setCapitalLoss(java.lang.Integer value) {
    this.capital_loss = value;
  }

  /**
   * Gets the value of the 'hours_per_week' field.
   * @return The value of the 'hours_per_week' field.
   */
  public java.lang.Integer getHoursPerWeek() {
    return hours_per_week;
  }

  /**
   * Sets the value of the 'hours_per_week' field.
   * @param value the value to set.
   */
  public void setHoursPerWeek(java.lang.Integer value) {
    this.hours_per_week = value;
  }

  /**
   * Gets the value of the 'native_country' field.
   * @return The value of the 'native_country' field.
   */
  public java.lang.CharSequence getNativeCountry() {
    return native_country;
  }

  /**
   * Sets the value of the 'native_country' field.
   * @param value the value to set.
   */
  public void setNativeCountry(java.lang.CharSequence value) {
    this.native_country = value;
  }

  /**
   * Gets the value of the 'salary_range' field.
   * @return The value of the 'salary_range' field.
   */
  public java.lang.CharSequence getSalaryRange() {
    return salary_range;
  }

  /**
   * Sets the value of the 'salary_range' field.
   * @param value the value to set.
   */
  public void setSalaryRange(java.lang.CharSequence value) {
    this.salary_range = value;
  }

  /**
   * Creates a new Adult RecordBuilder.
   * @return A new Adult RecordBuilder
   */
  public static adult.avro.Adult.Builder newBuilder() {
    return new adult.avro.Adult.Builder();
  }

  /**
   * Creates a new Adult RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Adult RecordBuilder
   */
  public static adult.avro.Adult.Builder newBuilder(adult.avro.Adult.Builder other) {
    return new adult.avro.Adult.Builder(other);
  }

  /**
   * Creates a new Adult RecordBuilder by copying an existing Adult instance.
   * @param other The existing instance to copy.
   * @return A new Adult RecordBuilder
   */
  public static adult.avro.Adult.Builder newBuilder(adult.avro.Adult other) {
    return new adult.avro.Adult.Builder(other);
  }

  /**
   * RecordBuilder for Adult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Adult>
    implements org.apache.avro.data.RecordBuilder<Adult> {

    private java.lang.Integer age;
    private java.lang.CharSequence workclass;
    private java.lang.Integer fnlwgt;
    private java.lang.CharSequence education;
    private java.lang.Integer education_num;
    private java.lang.CharSequence marital_status;
    private java.lang.CharSequence occupation;
    private java.lang.CharSequence relationship;
    private java.lang.CharSequence race;
    private java.lang.CharSequence sex;
    private java.lang.Integer capital_gain;
    private java.lang.Integer capital_loss;
    private java.lang.Integer hours_per_week;
    private java.lang.CharSequence native_country;
    private java.lang.CharSequence salary_range;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(adult.avro.Adult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.age)) {
        this.age = data().deepCopy(fields()[0].schema(), other.age);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.workclass)) {
        this.workclass = data().deepCopy(fields()[1].schema(), other.workclass);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.fnlwgt)) {
        this.fnlwgt = data().deepCopy(fields()[2].schema(), other.fnlwgt);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.education)) {
        this.education = data().deepCopy(fields()[3].schema(), other.education);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.education_num)) {
        this.education_num = data().deepCopy(fields()[4].schema(), other.education_num);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.marital_status)) {
        this.marital_status = data().deepCopy(fields()[5].schema(), other.marital_status);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.occupation)) {
        this.occupation = data().deepCopy(fields()[6].schema(), other.occupation);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.relationship)) {
        this.relationship = data().deepCopy(fields()[7].schema(), other.relationship);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.race)) {
        this.race = data().deepCopy(fields()[8].schema(), other.race);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.sex)) {
        this.sex = data().deepCopy(fields()[9].schema(), other.sex);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.capital_gain)) {
        this.capital_gain = data().deepCopy(fields()[10].schema(), other.capital_gain);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.capital_loss)) {
        this.capital_loss = data().deepCopy(fields()[11].schema(), other.capital_loss);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.hours_per_week)) {
        this.hours_per_week = data().deepCopy(fields()[12].schema(), other.hours_per_week);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.native_country)) {
        this.native_country = data().deepCopy(fields()[13].schema(), other.native_country);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.salary_range)) {
        this.salary_range = data().deepCopy(fields()[14].schema(), other.salary_range);
        fieldSetFlags()[14] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Adult instance
     * @param other The existing instance to copy.
     */
    private Builder(adult.avro.Adult other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.age)) {
        this.age = data().deepCopy(fields()[0].schema(), other.age);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.workclass)) {
        this.workclass = data().deepCopy(fields()[1].schema(), other.workclass);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.fnlwgt)) {
        this.fnlwgt = data().deepCopy(fields()[2].schema(), other.fnlwgt);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.education)) {
        this.education = data().deepCopy(fields()[3].schema(), other.education);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.education_num)) {
        this.education_num = data().deepCopy(fields()[4].schema(), other.education_num);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.marital_status)) {
        this.marital_status = data().deepCopy(fields()[5].schema(), other.marital_status);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.occupation)) {
        this.occupation = data().deepCopy(fields()[6].schema(), other.occupation);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.relationship)) {
        this.relationship = data().deepCopy(fields()[7].schema(), other.relationship);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.race)) {
        this.race = data().deepCopy(fields()[8].schema(), other.race);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.sex)) {
        this.sex = data().deepCopy(fields()[9].schema(), other.sex);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.capital_gain)) {
        this.capital_gain = data().deepCopy(fields()[10].schema(), other.capital_gain);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.capital_loss)) {
        this.capital_loss = data().deepCopy(fields()[11].schema(), other.capital_loss);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.hours_per_week)) {
        this.hours_per_week = data().deepCopy(fields()[12].schema(), other.hours_per_week);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.native_country)) {
        this.native_country = data().deepCopy(fields()[13].schema(), other.native_country);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.salary_range)) {
        this.salary_range = data().deepCopy(fields()[14].schema(), other.salary_range);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'age' field.
      * @return The value.
      */
    public java.lang.Integer getAge() {
      return age;
    }

    /**
      * Sets the value of the 'age' field.
      * @param value The value of 'age'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setAge(java.lang.Integer value) {
      validate(fields()[0], value);
      this.age = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'age' field has been set.
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'age' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearAge() {
      age = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'workclass' field.
      * @return The value.
      */
    public java.lang.CharSequence getWorkclass() {
      return workclass;
    }

    /**
      * Sets the value of the 'workclass' field.
      * @param value The value of 'workclass'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setWorkclass(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.workclass = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'workclass' field has been set.
      * @return True if the 'workclass' field has been set, false otherwise.
      */
    public boolean hasWorkclass() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'workclass' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearWorkclass() {
      workclass = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'fnlwgt' field.
      * @return The value.
      */
    public java.lang.Integer getFnlwgt() {
      return fnlwgt;
    }

    /**
      * Sets the value of the 'fnlwgt' field.
      * @param value The value of 'fnlwgt'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setFnlwgt(java.lang.Integer value) {
      validate(fields()[2], value);
      this.fnlwgt = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'fnlwgt' field has been set.
      * @return True if the 'fnlwgt' field has been set, false otherwise.
      */
    public boolean hasFnlwgt() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'fnlwgt' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearFnlwgt() {
      fnlwgt = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'education' field.
      * @return The value.
      */
    public java.lang.CharSequence getEducation() {
      return education;
    }

    /**
      * Sets the value of the 'education' field.
      * @param value The value of 'education'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setEducation(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.education = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'education' field has been set.
      * @return True if the 'education' field has been set, false otherwise.
      */
    public boolean hasEducation() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'education' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearEducation() {
      education = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'education_num' field.
      * @return The value.
      */
    public java.lang.Integer getEducationNum() {
      return education_num;
    }

    /**
      * Sets the value of the 'education_num' field.
      * @param value The value of 'education_num'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setEducationNum(java.lang.Integer value) {
      validate(fields()[4], value);
      this.education_num = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'education_num' field has been set.
      * @return True if the 'education_num' field has been set, false otherwise.
      */
    public boolean hasEducationNum() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'education_num' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearEducationNum() {
      education_num = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'marital_status' field.
      * @return The value.
      */
    public java.lang.CharSequence getMaritalStatus() {
      return marital_status;
    }

    /**
      * Sets the value of the 'marital_status' field.
      * @param value The value of 'marital_status'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setMaritalStatus(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.marital_status = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'marital_status' field has been set.
      * @return True if the 'marital_status' field has been set, false otherwise.
      */
    public boolean hasMaritalStatus() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'marital_status' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearMaritalStatus() {
      marital_status = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'occupation' field.
      * @return The value.
      */
    public java.lang.CharSequence getOccupation() {
      return occupation;
    }

    /**
      * Sets the value of the 'occupation' field.
      * @param value The value of 'occupation'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setOccupation(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.occupation = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'occupation' field has been set.
      * @return True if the 'occupation' field has been set, false otherwise.
      */
    public boolean hasOccupation() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'occupation' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearOccupation() {
      occupation = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'relationship' field.
      * @return The value.
      */
    public java.lang.CharSequence getRelationship() {
      return relationship;
    }

    /**
      * Sets the value of the 'relationship' field.
      * @param value The value of 'relationship'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setRelationship(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.relationship = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'relationship' field has been set.
      * @return True if the 'relationship' field has been set, false otherwise.
      */
    public boolean hasRelationship() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'relationship' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearRelationship() {
      relationship = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'race' field.
      * @return The value.
      */
    public java.lang.CharSequence getRace() {
      return race;
    }

    /**
      * Sets the value of the 'race' field.
      * @param value The value of 'race'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setRace(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.race = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'race' field has been set.
      * @return True if the 'race' field has been set, false otherwise.
      */
    public boolean hasRace() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'race' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearRace() {
      race = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'sex' field.
      * @return The value.
      */
    public java.lang.CharSequence getSex() {
      return sex;
    }

    /**
      * Sets the value of the 'sex' field.
      * @param value The value of 'sex'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setSex(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.sex = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'sex' field has been set.
      * @return True if the 'sex' field has been set, false otherwise.
      */
    public boolean hasSex() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'sex' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearSex() {
      sex = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'capital_gain' field.
      * @return The value.
      */
    public java.lang.Integer getCapitalGain() {
      return capital_gain;
    }

    /**
      * Sets the value of the 'capital_gain' field.
      * @param value The value of 'capital_gain'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setCapitalGain(java.lang.Integer value) {
      validate(fields()[10], value);
      this.capital_gain = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'capital_gain' field has been set.
      * @return True if the 'capital_gain' field has been set, false otherwise.
      */
    public boolean hasCapitalGain() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'capital_gain' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearCapitalGain() {
      capital_gain = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'capital_loss' field.
      * @return The value.
      */
    public java.lang.Integer getCapitalLoss() {
      return capital_loss;
    }

    /**
      * Sets the value of the 'capital_loss' field.
      * @param value The value of 'capital_loss'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setCapitalLoss(java.lang.Integer value) {
      validate(fields()[11], value);
      this.capital_loss = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'capital_loss' field has been set.
      * @return True if the 'capital_loss' field has been set, false otherwise.
      */
    public boolean hasCapitalLoss() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'capital_loss' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearCapitalLoss() {
      capital_loss = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'hours_per_week' field.
      * @return The value.
      */
    public java.lang.Integer getHoursPerWeek() {
      return hours_per_week;
    }

    /**
      * Sets the value of the 'hours_per_week' field.
      * @param value The value of 'hours_per_week'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setHoursPerWeek(java.lang.Integer value) {
      validate(fields()[12], value);
      this.hours_per_week = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'hours_per_week' field has been set.
      * @return True if the 'hours_per_week' field has been set, false otherwise.
      */
    public boolean hasHoursPerWeek() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'hours_per_week' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearHoursPerWeek() {
      hours_per_week = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'native_country' field.
      * @return The value.
      */
    public java.lang.CharSequence getNativeCountry() {
      return native_country;
    }

    /**
      * Sets the value of the 'native_country' field.
      * @param value The value of 'native_country'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setNativeCountry(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.native_country = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'native_country' field has been set.
      * @return True if the 'native_country' field has been set, false otherwise.
      */
    public boolean hasNativeCountry() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'native_country' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearNativeCountry() {
      native_country = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'salary_range' field.
      * @return The value.
      */
    public java.lang.CharSequence getSalaryRange() {
      return salary_range;
    }

    /**
      * Sets the value of the 'salary_range' field.
      * @param value The value of 'salary_range'.
      * @return This builder.
      */
    public adult.avro.Adult.Builder setSalaryRange(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.salary_range = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'salary_range' field has been set.
      * @return True if the 'salary_range' field has been set, false otherwise.
      */
    public boolean hasSalaryRange() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'salary_range' field.
      * @return This builder.
      */
    public adult.avro.Adult.Builder clearSalaryRange() {
      salary_range = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Adult build() {
      try {
        Adult record = new Adult();
        record.age = fieldSetFlags()[0] ? this.age : (java.lang.Integer) defaultValue(fields()[0]);
        record.workclass = fieldSetFlags()[1] ? this.workclass : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.fnlwgt = fieldSetFlags()[2] ? this.fnlwgt : (java.lang.Integer) defaultValue(fields()[2]);
        record.education = fieldSetFlags()[3] ? this.education : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.education_num = fieldSetFlags()[4] ? this.education_num : (java.lang.Integer) defaultValue(fields()[4]);
        record.marital_status = fieldSetFlags()[5] ? this.marital_status : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.occupation = fieldSetFlags()[6] ? this.occupation : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.relationship = fieldSetFlags()[7] ? this.relationship : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.race = fieldSetFlags()[8] ? this.race : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.sex = fieldSetFlags()[9] ? this.sex : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.capital_gain = fieldSetFlags()[10] ? this.capital_gain : (java.lang.Integer) defaultValue(fields()[10]);
        record.capital_loss = fieldSetFlags()[11] ? this.capital_loss : (java.lang.Integer) defaultValue(fields()[11]);
        record.hours_per_week = fieldSetFlags()[12] ? this.hours_per_week : (java.lang.Integer) defaultValue(fields()[12]);
        record.native_country = fieldSetFlags()[13] ? this.native_country : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.salary_range = fieldSetFlags()[14] ? this.salary_range : (java.lang.CharSequence) defaultValue(fields()[14]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Adult>
    WRITER$ = (org.apache.avro.io.DatumWriter<Adult>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Adult>
    READER$ = (org.apache.avro.io.DatumReader<Adult>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
